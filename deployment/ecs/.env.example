# ECS Deployment Configuration
# Copy this file to .env and update with your values

# ============================================================================
# AWS Account Configuration
# ============================================================================

# AWS Region (e.g., ap-southeast-1, us-east-1)
AWS_REGION=ap-southeast-1

# AWS Account ID (12-digit account number)
AWS_ACCOUNT_ID=123456789012

# ============================================================================
# ECR Configuration
# ============================================================================

# ECR repository name for Docker images
ECR_REPO_NAME=kvs-infer

# ============================================================================
# ECS Configuration
# ============================================================================

# ECS cluster name
ECS_CLUSTER_NAME=kvs-infer-cluster

# ============================================================================
# VPC & Network Configuration
# ============================================================================

# VPC ID where ECS tasks will run
VPC_ID=vpc-xxxxxxxxxxxxxxxxx

# Private subnet IDs (minimum 2 in different AZs)
PRIVATE_SUBNET_1=subnet-xxxxxxxxxxxxxxxxx
PRIVATE_SUBNET_2=subnet-xxxxxxxxxxxxxxxxx

# Security group ID (will be created if not exists)
# SECURITY_GROUP_ID=sg-xxxxxxxxxxxxxxxxx

# ============================================================================
# KVS Configuration
# ============================================================================

# Kinesis Video Streams prefix (e.g., "camera" for camera-001, camera-002)
KVS_STREAM_PREFIX=camera

# ============================================================================
# KDS Configuration
# ============================================================================

# Kinesis Data Stream name for detection events
KDS_STREAM_NAME=kvs-detection-events

# ============================================================================
# S3 Configuration
# ============================================================================

# S3 bucket name for storing snapshots
S3_BUCKET_NAME=kvs-inference-snapshots

# S3 prefix for snapshot storage
S3_PREFIX=snapshots

# ============================================================================
# DynamoDB Configuration (Optional)
# ============================================================================

# DynamoDB table name for metadata storage
DYNAMODB_TABLE_NAME=kvs-inference-metadata

# ============================================================================
# Instance Configuration
# ============================================================================

# EC2 instance type for ECS cluster (g4dn family for GPU)
# g4dn.xlarge  - 4 vCPU, 16 GB RAM, 1 GPU (~$0.526/hr)
# g4dn.2xlarge - 8 vCPU, 32 GB RAM, 1 GPU (~$0.752/hr)
INSTANCE_TYPE=g4dn.xlarge

# Auto Scaling Group configuration
ASG_MIN_SIZE=1
ASG_MAX_SIZE=3
ASG_DESIRED_CAPACITY=1

# ============================================================================
# Application Configuration
# ============================================================================

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# HTTP server port (default: 8080)
HTTP_PORT=8080

# ============================================================================
# Task Definition Configuration
# ============================================================================

# Task CPU (in CPU units, 1024 = 1 vCPU)
TASK_CPU=4096

# Task memory (in MB)
TASK_MEMORY=16384

# Number of GPUs per task
GPU_COUNT=1

# ============================================================================
# Service Configuration
# ============================================================================

# Desired number of running tasks
DESIRED_COUNT=1

# Enable ECS Exec (for debugging with aws ecs execute-command)
ENABLE_EXECUTE_COMMAND=true

# ============================================================================
# Monitoring Configuration
# ============================================================================

# Enable Container Insights
ENABLE_CONTAINER_INSIGHTS=true

# CloudWatch log group
LOG_GROUP=/ecs/kvs-infer

# CloudWatch log retention (in days)
LOG_RETENTION_DAYS=7

# ============================================================================
# Cost Optimization
# ============================================================================

# Use Spot instances (true/false)
# USE_SPOT_INSTANCES=false

# Spot instance max price (leave empty for on-demand price)
# SPOT_MAX_PRICE=

# ============================================================================
# VPC Endpoints (Optional)
# ============================================================================

# Create VPC endpoints to reduce NAT Gateway costs
CREATE_VPC_ENDPOINTS=true

# List of VPC endpoint services to create
# VPC_ENDPOINT_SERVICES="ecr.api,ecr.dkr,s3,logs,kinesis-streams"

# ============================================================================
# Tags
# ============================================================================

# Project name tag
PROJECT_NAME=kvs-infer

# Environment tag (development, staging, production)
ENVIRONMENT=production

# Managed by tag
MANAGED_BY=terraform

# ============================================================================
# Advanced Configuration (Optional)
# ============================================================================

# Health check grace period (seconds)
HEALTH_CHECK_GRACE_PERIOD=60

# Deployment circuit breaker (enable/disable rollback on failure)
ENABLE_CIRCUIT_BREAKER=true

# Task placement strategy
# PLACEMENT_STRATEGY=spread  # spread, binpack, random

# Enable CloudWatch alarms
ENABLE_ALARMS=true

# SNS topic ARN for alarm notifications
# ALARM_SNS_TOPIC_ARN=arn:aws:sns:${AWS_REGION}:${AWS_ACCOUNT_ID}:kvs-infer-alarms

# ============================================================================
# Notes
# ============================================================================

# 1. Required Variables:
#    - AWS_REGION, AWS_ACCOUNT_ID
#    - ECR_REPO_NAME, ECS_CLUSTER_NAME
#    - VPC_ID, PRIVATE_SUBNET_1, PRIVATE_SUBNET_2
#    - KVS_STREAM_PREFIX, KDS_STREAM_NAME
#    - S3_BUCKET_NAME, S3_PREFIX

# 2. VPC Requirements:
#    - VPC must have private subnets in at least 2 AZs
#    - NAT Gateway or NAT Instance required for Internet access (KVS)
#    - VPC endpoints recommended for cost optimization

# 3. IAM Requirements:
#    - AWS CLI configured with credentials
#    - Permissions to create IAM roles, ECS resources, EC2 instances

# 4. Cost Considerations:
#    - g4dn.xlarge: ~$380/month (24x7)
#    - NAT Gateway: ~$32/month + data transfer
#    - VPC endpoints: ~$7/month per endpoint
#    - CloudWatch Logs: $0.50/GB ingested

# 5. Security Best Practices:
#    - Use IAM roles instead of access keys
#    - Enable VPC endpoints to reduce Internet exposure
#    - Use private subnets for ECS tasks
#    - Enable CloudWatch Container Insights for monitoring
#    - Use least-privilege IAM policies

# 6. Scaling Considerations:
#    - Start with 1 task and scale based on load
#    - Monitor GPU utilization in CloudWatch
#    - Use Auto Scaling based on custom metrics
#    - Consider Spot instances for cost savings

# 7. Deployment:
#    - Run: ./deployment/ecs/deploy.sh
#    - Or use individual AWS CLI commands from README-ECS.md

# 8. Troubleshooting:
#    - Check ECS console for task status
#    - View logs: aws logs tail /ecs/kvs-infer --follow
#    - Check task health: aws ecs describe-tasks --cluster ${ECS_CLUSTER_NAME} --tasks <task-arn>
